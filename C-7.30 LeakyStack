class _Node:
    __slots__ = '_element','_next'
    def __init__(self, element, after):
        self._element = element
        self._next = after
        
class SinglyList(object):
    MAXLENGTH = 5
    def __init__(self):
        self._head = None
        self._size = 0 
        
    def __len__(self):
        return self._size
    
    def push(self,e):
        if self._size == SinglyList.MAXLENGTH:
            self.drop_bottom()
        self._head = _Node(e,self._head)
        self._size += 1
            
    def drop_bottom(self):
        prev,current = None,self._head
        while current._next != None:
            prev = current
            current = current._next
        current._element = None
        current._next = None
        prev._next = None
        self._size -= 1
    
    def pull(self):
        answer = self._head._element
        self._head._element = None
        self._head = self._head._next
        self._size -= 1
        return answer
    
    def __repr__(self):
        StackList = []
        walk = self._head
        for i in range(self._size):
            StackList.append(walk._element)
            walk = walk._next
        return str(StackList)

L = SinglyList()
for i in range(1,10):
    L.push(i)
print L
